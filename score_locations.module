<?php

// This module scores the library hours node as it is entered.
function score_locations_node_view($node, $view_mode, $langcode)
{
	//kpr($node);
}

function score_locations_form_library_hours_node_form_alter(&$form, &$form_state, $form_id)
{
	//Disable Access to Score field for everyone except the Admin

	// Change Text of Add another item
}

function score_locations_node_submit($node)
{
	//die(kpr($node));
    $days_of_week_taxonomy = get_all_days_of_week();
	// For all fieldsets
	for($i = 0; $i <20; $i++){
		if(isset($node->field_time_field_collection['und'][$i])){
			// Load all fieldsets in an array so we can act on them piecewise
			$fieldsets[] = $node->field_time_field_collection['und'][$i];
		}
	}
	foreach($fieldsets as $fieldset)
	{
		// Get all days within chosen range in a fieldset
		//get_all_days($fieldset);
		//dpm(get_all_days($fieldset));
		//dpm(get_all_days_of_week());
		
		$days_chosen_on_form = get_all_days($fieldset);
		//dpm($days_chosen_on_form);
		
		// Get Term ids of all days chosen in each fieldset of the form
		//get_tids_of_days_chosen_on_form($fieldset);

		//if selected days in a fieldset, not in range, unset them
		unset_days_not_in_range_of_fieldset($fieldset, $days_chosen_on_form);

		// Get number of effected days on a fieldset
		$days_effected_on_form = get_number_of_days_effected($fieldset, $days_chosen_on_form);
		//dpm(get_number_of_days_effected($fieldset, $days_chosen_on_form));

		// If no days were selected by the user, check all days within range in that fieldset
		check_all_days_if_no_day_selected($fieldset, $days_chosen_on_form);

		// Score the fieldset
		score_the_fieldset($fieldset,$days_effected_on_form);
	}
}

// If no days are selected through checkboxes, check all day within range in that fieldset
function check_all_days_if_no_day_selected($fieldset, $days_chosen_on_form)
{
	// Show the fieldset
	//dpm($fieldset);

	// If the user has not set any days by checking a checkbox in the fieldset
	if(!isset($fieldset['field_days_of_week']['und'][0]['tid']))
	{
		//dpm("You have made no selections mate");	
		$days_chosen_tids = array();
		// Find out all the days chosen by the user on the form in each fieldset
		foreach($days_chosen_on_form as $days_chosen)
		{
			// Get tids for all the terms in the taxonomy
			$days_chosen_tids[] = _get_term_from_name($days_chosen, 'days_of_week');
		}
		// Find unique entries in the result
		$unique_days_chosen = array_unique($days_chosen_tids);
		
		// For all chosen tids, set the days on the fieldset
		//foreach($days_chosen_tids as $cho_tid)
		foreach($unique_days_chosen as $cho_tid)
		{
			//dpm($cho_tid);
			$fieldset['field_days_of_week']['und'][]['tid'] = $cho_tid;
			$fieldset['entity']->field_days_of_week['und'][] =array('tid' => $cho_tid);
		}
	}
}

// Helper function that takes a term as an input and return the term id
function _get_term_from_name($term_name, $vocabulary_name) {
  if ($vocabulary = taxonomy_vocabulary_machine_name_load($vocabulary_name)) {
    $tree = taxonomy_get_tree($vocabulary->vid);
    foreach ($tree as $term) {
      if ($term->name == $term_name) {
        return $term->tid;
      }
    }
  }
  return FALSE;
}

// The days selected in the fieldset if not in range, unset them
function unset_days_not_in_range_of_fieldset($fieldset, $days_chosen_on_form)
{
	//dpm($fieldset);

	//dpm($days_chosen_on_form);
	// Get days chosen on the form by the user using the checkboxes
	//$days_chosen_by_checkbox = array();
	//$days_selected = array();
	//for($i=0; $i<sizeof($fieldset['field_days_of_week']['und']); $i++)
	//{
		//dpm($days_chosen_on_form);
		//dpm(taxonomy_term_load($fieldset['field_days_of_week']['und'][$i]['tid'])->name);	
		//dpm(taxonomy_term_load($fieldset['field_days_of_week']['und'][$i]['tid']['name']));

		// Trying to get property of non-object in unset_days_not_in_range_of_fieldset() (line 70 of /vagrant/public/mani-drupal.vbox.local/www/sites/default/modules/custom/score_Locations/score_locations.module).
		//if(in_array(taxonomy_term_load($fieldset['field_days_of_week']['und'][$i]['tid'])->name, $days_chosen_on_form))
		//{
			//dpm("Its all there");
		//}
		//else
		//{
			//dpm("nope");
			// If days selected by checkbox are not in the range, unset them
			//unset($fieldset['field_days_of_week']['und'][$i]);
			//$fieldset['field_days_of_week']['und'][$i]['tid']->name = NULL;
		//}
	//}
}

// Get a score of the chosen values on the form
function score_the_fieldset($fieldset,$days_effected_on_form)
{
	// Current Epoch
	$time_now_epoch = time();
	// Count checked field locations
	$checked_field_locations = count($fieldset['field_locations']['und']);

	// Scoring formula
	$score_node = $checked_field_locations * $days_effected_on_form;
	
	// Populate Score field with calculated score
	$fieldset['field_score']['und'][0]['value'] = $score_node;
	$fieldset['entity']->field_score['und'][] = array('value' => $score_node);	
}

// Get number of days effected
function get_number_of_days_effected($fieldset, $days_chosen_on_form)
{
	$number_of_days = 0;
	//dpm($fieldset);
	// Get Start and End dates of the fieldset
	$start_time_on_fieldset = $fieldset['field_start_date']['und']['0']['value'];
	$end_time_on_fieldset   = $fieldset['field_end_date']['und']['0']['value'];
	// Format dates
	$formatted_start_date_on_fieldset = strtotime($start_time_on_fieldset);
	$formatted_end_date_on_fieldset = strtotime($end_time_on_fieldset);

	while(date('U', $formatted_start_date_on_fieldset) <= date('U',$formatted_end_date_on_fieldset))
	{
		// Extract days from chosen range
		$day_of_week = date("l", $formatted_start_date_on_fieldset);
		// If Chosen days in the taxonomy of days chosen on the form
		if(in_array($day_of_week, $days_chosen_on_form))
		{
			$number_of_days++;
		}
		$formatted_start_date_on_fieldset = strtotime('+1 day', $formatted_start_date_on_fieldset);
	}
	return $number_of_days;
}

// Get all days within chosen range in a fieldset
function get_all_days($fieldset)
{
	$fieldset_start = $fieldset['field_start_date']['und']['0']['value'];
	$fieldset_end = $fieldset['field_end_date']['und']['0']['value'];
	$formatted_start_date = strtotime($fieldset_start);
	$formatted_end_date = strtotime($fieldset_end);
	while(date('U',$formatted_start_date) <= date('U',$formatted_end_date)){
		$days_of_week = date('l', $formatted_start_date);
		$days[] = $days_of_week;
		$formatted_start_date = strtotime('+1 day', $formatted_start_date);
	}
	return $days;
}

// Get all days of week from the days of week taxonomy
function get_all_days_of_week()
{
	// Days of Week Taxonomy
	$days_of_week = array();
	// Load Days of week taxonomy
	$days_of_week_taxonomy = taxonomy_term_load_multiple(array(),array('vid' => 4));
	foreach($days_of_week_taxonomy as $day)
	{
		// Load days of week from the taxonomy into the array of days
		$days_of_week[] = $day->name;
	}
	return $days_of_week;
}

// Get all end dates
function get_all_start_dates($node)
{
	
	$start_dates = array();
	
	// For all Fieldsets
	for($i = 0; $i <20; $i++)
	{
		if(isset($node->field_time_field_collection['und'][$i]))
		{
			for($j=0; $j<sizeof($node->field_time_field_collection['und'][$i]['field_start_date']['und']); $j++)
			{
				$start_dates[] = $node->field_time_field_collection['und'][$i]['field_start_date']['und'][$j]['value'];
			}
		}
	}
	return $start_dates;
}

// Get all start dates
function get_all_end_dates($node)
{
	
	$end_dates = array();
	
	// For all Fieldsets
	for($i = 0; $i <20; $i++)
	{
		if(isset($node->field_time_field_collection['und'][$i]))
		{
			for($j=0; $j<sizeof($node->field_time_field_collection['und'][$i]['field_end_date']['und']); $j++)
			{
				$end_dates[] = $node->field_time_field_collection['und'][$i]['field_end_date']['und'][$j]['value'];
			}
		}
	}
	return $end_dates;
}